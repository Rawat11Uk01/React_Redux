{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increament(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'toggle') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["/home/alind/Downloads/React_Redux/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increament","state","decrement","increase","action","amount","toggle","store","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAGA,MAAMC,YAAY,GAAEL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,SADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAO;AAChBA,MAAAA,KAAK,CAACN,OAAN;AACA,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;AACnBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;AACH,KATK;;AAUNC,IAAAA,MAAM,CAACL,KAAD,EAAO;AACbA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAAGK,KAAK,CAACL,WAA7B;AACC;;AAZK;AAHkB,CAAD,CAA/B,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AAC1Be,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADI,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = { counter: 0, showCounter: true };\n\n\nconst counterSlice= createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increament(state){\n         state.counter++\n        },\n        decrement(state){\n            state.counter--\n        },\n        increase(state, action){\n            state.counter = state.counter + action.amount\n        },\n        toggle(state){\n        state.showCounter = !  state.showCounter\n        },\n    }\n})\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n\n//   return state;\n// };\n\n\nconst store = configureStore({\n   reducer: counterSlice.reducer\n});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}